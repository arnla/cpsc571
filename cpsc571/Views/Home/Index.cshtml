@model List<cpsc571.Models.Tweet>
@{
    ViewBag.Title = "CPSC571";
}

<form id="queryForm" onsubmit="return submitQuery()" action='@Url.Action("Tester", "Home")' method="post">
    <div class="form-group">
        <label for="inputQuery">Input Query</label>
        @*<input type="text" class="form-control form-control-lg" id="inputQuery" aria-describedby="queryHelp" placeholder="Enter Query">*@
        @Html.TextBox("InputQuery")
        <small id="queryHelp" class="form-text text-muted">Enter a word or query you wish to find words related to.</small>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</form>

<div id="chart">
    <svg>
        
    </svg>
</div>

<div>
    <button id="stopStream">Stop application</button>
    <ul id="tweetsList">
        @*@foreach (var t in Model.ToList())
        {
            <li>@t.FullText</li>
        }*@
    </ul>
</div>

<script type="text/javascript">

    var jsonPath = "@Request.Url.Scheme" + "://" + "@Request.Url.Authority" + 
    "@Request.ApplicationPath.TrimEnd('/')" + "/" + "Data_Files/test2.json";
   

    var diameter = 960,
        format = d3.format(",d"),
        color = d3.scaleOrdinal(d3.schemeCategory20c);

    var bubble = d3.pack()
        .size([diameter, diameter])
        .padding(1.5);

    var svg = d3.select("body").append("svg")
        .attr("width", diameter)
        .attr("height", diameter)
        .attr("class", "bubble");

    d3.json(jsonPath, function (error, data) {
        if (error) throw error;

        var root = d3.hierarchy(classes(data))
            .sum(function (d) { return d.count; })
            .sort(function (a, b) { return b.count - a.count; });

        bubble(root);
        var node = svg.selectAll(".node")
            .data(root)
            .enter().append("g")
            .attr("class", "node")
            .attr("transform", function (d) { return "translate(" + d.x + "," + d.y + ")"; });

        node.append("title")
            .text(function (d) { return d.data.keyword + ": " + format(d.count); });

        node.append("circle")
            .attr("r", function (d) { return d.r; })
            .style("fill", function (d) {
                return color(d.data.keyword);
            });

        node.append("text")
            .attr("dy", ".3em")
            .style("text-anchor", "middle")
            .text(function (d) { return d.data.keyword; });
    });

    // Returns a flattened hierarchy containing all leaf nodes under the root.
    //function classes(root) {
    //    var classes = [];

    //function classes(root) {
    //    var classes = [];

    //    function recurse(name, node) {
    //        if (node.children) node.children.forEach(function (child) { recurse(node.name, child); });
    //        else classes.push({ packageName: name, className: node.name, value: node.size });
    //    }

    //    recurse(null, root);
    //    return { children: classes };
    //}

    function classes(root) {
        var dataset = [];
        for (var node in root) {
            dataset.push({keyword: root[node].Keyword, count: root[node].Count})
        }
        return { children: dataset }
    }

    d3.select(self.frameElement).style("height", diameter + "px");

    //var data = [80, 120, 60, 150, 200];
    //var barHeight = 20;
    //var bar = d3.select('svg')
    //          .selectAll('rect')
    //          .data(data)
    //          .enter()
    //          .append('rect')
    //          .attr('width', function(d) {  return d; })
    //          .attr('height', barHeight - 1)
    //          .attr('transform', function(d, i) {
    //            return "translate(0," + i * barHeight + ")";
    //          });


    function submitQuery() {
        var query = document.forms["queryForm"]["inputQuery"].value;
        if (query == "") {
            alert("Query must not be empty!");
            return false;
        }
    }

    $(document).ready(function () {
        //setinterval(function () {
        //    $('#tweetslist').append('<li>hello</li>');
        //}, 5000);

        $('#stopStream').click(function () {
            location.href = '@Url.Action("Stop", "Home")';
        });
    });


</script>