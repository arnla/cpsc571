@model List<cpsc571.Models.Tweet>
@{
    ViewBag.Title = "CPSC571";
}

<form id="queryForm" onsubmit="return submitQuery()" action='@Url.Action("Tester", "Home")' method="post">
    <div class="form-group">
        <label for="inputQuery">Input Query</label>
        @*<input type="text" class="form-control form-control-lg" id="inputQuery" aria-describedby="queryHelp" placeholder="Enter Query">*@
        @Html.TextBox("InputQuery")
        <small id="queryHelp" class="form-text text-muted">Enter a word or query you wish to find words related to.</small>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</form>

<div id="chart">
    <svg>
        
    </svg>
</div>

<div>
    <button id="stopStream">Stop application</button>
    <ul id="tweetsList">
        @*@foreach (var t in Model.ToList())
        {
            <li>@t.FullText</li>
        }*@
    </ul>
</div>

<script type="text/javascript">

    var csvPath = "@Request.Url.Scheme" + "://" + "@Request.Url.Authority" + 
    "@Request.ApplicationPath.TrimEnd('/')" + "/" + "Data_Files/test.csv";
   

    var chart = bubbleChart().width(600).height(400);
    d3.csv(csvPath, function (error, data) {
        if (error) {
            console.error('Error getting or parsing the data.');
            throw error;
        }
        // selection.datum() returns the bound datum for the first element in the selection and 
        //  doesn't join the specified array of data with the selected elements
        var chart = bubbleChart().width(600).height(400);
        d3.select('#chart').datum(data).call(chart);
    });

    //var data = [80, 120, 60, 150, 200];
    //var barHeight = 20;
    //var bar = d3.select('svg')
    //          .selectAll('rect')
    //          .data(data)
    //          .enter()
    //          .append('rect')
    //          .attr('width', function(d) {  return d; })
    //          .attr('height', barHeight - 1)
    //          .attr('transform', function(d, i) {
    //            return "translate(0," + i * barHeight + ")";
    //          });


    function submitQuery() {
        var query = document.forms["queryForm"]["inputQuery"].value;
        if (query == "") {
            alert("Query must not be empty!");
            return false;
        }
    }

    $(document).ready(function () {
        //setinterval(function () {
        //    $('#tweetslist').append('<li>hello</li>');
        //}, 5000);

        $('#stopStream').click(function () {
            location.href = '@Url.Action("Stop", "Home")';
        });
    });


</script>